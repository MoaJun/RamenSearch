import{G as D,T as d}from"./ai-8rzRUgYl.js";class m{constructor(e="ramensearch_cache"){this.prefix=e}async get(e){try{const t=`${this.prefix}_${e}`,r=localStorage.getItem(t);if(!r)return null;const s=JSON.parse(r);return Date.now()>s.timestamp+s.expiresIn?(localStorage.removeItem(t),null):s.data}catch(t){return console.warn(`Cache get error for key ${e}:`,t),null}}async set(e,t,r=1440*60*1e3){try{const s=`${this.prefix}_${e}`,a={data:t,timestamp:Date.now(),expiresIn:r};localStorage.setItem(s,JSON.stringify(a))}catch(s){if(console.warn(`Cache set error for key ${e}:`,s),s instanceof DOMException&&s.code===22){console.warn("localStorage quota exceeded, clearing old cache"),this.clearExpired();try{const a=`${this.prefix}_${e}`,o={data:t,timestamp:Date.now(),expiresIn:r};localStorage.setItem(a,JSON.stringify(o))}catch(a){console.error("Failed to cache even after cleanup:",a)}}}}async remove(e){const t=`${this.prefix}_${e}`;localStorage.removeItem(t)}async clear(){const e=[];for(let t=0;t<localStorage.length;t++){const r=localStorage.key(t);r?.startsWith(this.prefix)&&e.push(r)}e.forEach(t=>localStorage.removeItem(t))}async clearExpired(){const e=[],t=Date.now();for(let r=0;r<localStorage.length;r++){const s=localStorage.key(r);if(s?.startsWith(this.prefix))try{const a=localStorage.getItem(s);if(a){const o=JSON.parse(a);t>o.timestamp+o.expiresIn&&e.push(s)}}catch{e.push(s)}}return e.forEach(r=>localStorage.removeItem(r)),e.length}getStats(){let e=0,t=0;for(let r=0;r<localStorage.length;r++){const s=localStorage.key(r);if(s?.startsWith(this.prefix)){e++;const a=localStorage.getItem(s);a&&(t+=s.length+a.length)}}return{totalEntries:e,totalSize:t}}}const g=new m("ramensearch_gemini"),c=new m("ramensearch_favorites"),p=new m("ramensearch_visits"),u="user_favorites",h="user_visits",l=365*24*60*60*1e3;class y{async getFavorites(){const e=await c.get(u);return e?e.map(t=>({...t,savedAt:new Date(t.savedAt),lastVisit:t.lastVisit?new Date(t.lastVisit):void 0})):[]}async addToFavorites(e){const t=await this.getFavorites();if(t.findIndex(a=>a.placeId===e.placeId)!==-1){console.log("Shop is already in favorites");return}const s={placeId:e.placeId,name:e.name,address:e.address,rating:e.rating,savedAt:new Date,visitCount:0};t.push(s),await c.set(u,t,l)}async removeFromFavorites(e){const r=(await this.getFavorites()).filter(s=>s.placeId!==e);await c.set(u,r,l)}async isFavorite(e){return(await this.getFavorites()).some(r=>r.placeId===e)}async updateFavoriteNotes(e,t){const r=await this.getFavorites(),s=r.findIndex(a=>a.placeId===e);if(s===-1)throw new Error("Shop not found in favorites");r[s].personal_notes=t,await c.set(u,r,l)}async updateFavoriteTags(e,t){const r=await this.getFavorites(),s=r.findIndex(a=>a.placeId===e);if(s===-1)throw new Error("Shop not found in favorites");r[s].tags=t,await c.set(u,r,l)}async getVisitHistory(){const e=await p.get(h);return e?e.map(t=>({...t,visitDate:new Date(t.visitDate)})).sort((t,r)=>r.visitDate.getTime()-t.visitDate.getTime()):[]}async addVisit(e){const t=await this.getVisitHistory(),r={...e,visitDate:e.visitDate||new Date};t.unshift(r);const s=t.slice(0,100);await p.set(h,s,l),await this.updateVisitCount(e.placeId)}async updateVisitCount(e){const t=await this.getFavorites(),r=t.findIndex(s=>s.placeId===e);if(r!==-1){const a=(await this.getVisitHistory()).filter(o=>o.placeId===e).length;t[r].visitCount=a,t[r].lastVisit=new Date,await c.set(u,t,l)}}async getShopVisits(e){return(await this.getVisitHistory()).filter(r=>r.placeId===e)}async getFavoritesSorted(e="recent"){const t=await this.getFavorites();switch(e){case"recent":return t.sort((r,s)=>s.savedAt.getTime()-r.savedAt.getTime());case"rating":return t.sort((r,s)=>s.rating-r.rating);case"name":return t.sort((r,s)=>r.name.localeCompare(s.name,"ja"));case"visits":return t.sort((r,s)=>(s.visitCount||0)-(r.visitCount||0));default:return t}}async exportUserData(){const[e,t]=await Promise.all([this.getFavorites(),this.getVisitHistory()]);return{favorites:e,visits:t}}async importUserData(e){e.favorites&&await c.set(u,e.favorites,l),e.visits&&await p.set(h,e.visits,l)}async clearAllData(){await Promise.all([c.clear(),p.clear()])}}const R=new y;class I{constructor(){throw this.userId="ramensearch_user",new Error("Supabase configuration missing. Please set VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY")}dbFavoriteToApp(e){return{id:e.id,user_id:e.user_id,placeId:e.place_id,name:e.name,address:e.address||"",rating:e.rating||0,savedAt:new Date(e.saved_at),visitCount:e.visit_count,lastVisit:e.last_visit?new Date(e.last_visit):void 0,personal_notes:e.personal_notes||"",tags:e.tags||[],created_at:new Date(e.created_at)}}dbVisitToApp(e){return{id:e.id,user_id:e.user_id,placeId:e.place_id,shop_name:e.shop_name,visitDate:new Date(e.visit_date),rating:e.rating||void 0,notes:e.notes||"",photos:e.photos||[],created_at:new Date(e.created_at)}}async getFavorites(){try{const{data:e,error:t}=await this.supabase.from("favorites").select("*").eq("user_id",this.userId).order("saved_at",{ascending:!1});if(t)throw console.error("Error fetching favorites:",t),t;return(e||[]).map(this.dbFavoriteToApp)}catch(e){return console.error("Failed to get favorites:",e),[]}}async addToFavorites(e){try{if((await supabase.from(TABLES.FAVORITES).select("id").eq("user_id",DEMO_USER_ID).eq("place_id",e.placeId).single()).data){console.log("Shop is already in favorites");return}const r={user_id:DEMO_USER_ID,place_id:e.placeId,name:e.name,address:e.address,rating:e.rating,saved_at:new Date().toISOString(),visit_count:0,last_visit:null,personal_notes:null,tags:null},{error:s}=await supabase.from(TABLES.FAVORITES).insert(r);if(s)throw console.error("Error adding to favorites:",s),s}catch(t){throw console.error("Failed to add to favorites:",t),t}}async removeFromFavorites(e){try{const{error:t}=await supabase.from(TABLES.FAVORITES).delete().eq("user_id",DEMO_USER_ID).eq("place_id",e);if(t)throw console.error("Error removing from favorites:",t),t}catch(t){throw console.error("Failed to remove from favorites:",t),t}}async isFavorite(e){try{const{data:t,error:r}=await supabase.from(TABLES.FAVORITES).select("id").eq("user_id",DEMO_USER_ID).eq("place_id",e).single();return r&&r.code!=="PGRST116"?(console.error("Error checking favorite status:",r),!1):!!t}catch(t){return console.error("Failed to check favorite status:",t),!1}}async updateFavoriteNotes(e,t){try{const{error:r}=await supabase.from(TABLES.FAVORITES).update({personal_notes:t}).eq("user_id",DEMO_USER_ID).eq("place_id",e);if(r)throw console.error("Error updating favorite notes:",r),r}catch(r){throw console.error("Failed to update favorite notes:",r),r}}async updateFavoriteTags(e,t){try{const{error:r}=await supabase.from(TABLES.FAVORITES).update({tags:t}).eq("user_id",DEMO_USER_ID).eq("place_id",e);if(r)throw console.error("Error updating favorite tags:",r),r}catch(r){throw console.error("Failed to update favorite tags:",r),r}}async getVisitHistory(){try{const{data:e,error:t}=await supabase.from(TABLES.VISIT_HISTORY).select("*").eq("user_id",DEMO_USER_ID).order("visit_date",{ascending:!1});if(t)throw console.error("Error fetching visit history:",t),t;return this.transformDatabaseVisitsToApp(e||[])}catch(e){return console.error("Failed to get visit history:",e),[]}}async addVisit(e){try{const t={user_id:DEMO_USER_ID,place_id:e.placeId,shop_name:e.shop_name||"Unknown Shop",visit_date:(e.visitDate||new Date).toISOString(),rating:e.rating||null,notes:e.notes||null,photos:e.photos||null},{error:r}=await supabase.from(TABLES.VISIT_HISTORY).insert(t);if(r)throw console.error("Error adding visit:",r),r;await this.updateVisitCount(e.placeId)}catch(t){throw console.error("Failed to add visit:",t),t}}async getShopVisits(e){try{const{data:t,error:r}=await supabase.from(TABLES.VISIT_HISTORY).select("*").eq("user_id",DEMO_USER_ID).eq("place_id",e).order("visit_date",{ascending:!1});return r?(console.error("Error fetching shop visits:",r),[]):this.transformDatabaseVisitsToApp(t||[])}catch(t){return console.error("Failed to get shop visits:",t),[]}}async getFavoritesSorted(e="recent"){try{let t,r=!1;switch(e){case"recent":t="saved_at";break;case"rating":t="rating";break;case"name":t="name",r=!0;break;case"visits":t="visit_count";break;default:t="saved_at"}const{data:s,error:a}=await supabase.from(TABLES.FAVORITES).select("*").eq("user_id",DEMO_USER_ID).order(t,{ascending:r});return a?(console.error("Error fetching sorted favorites:",a),[]):this.transformDatabaseFavoritesToApp(s||[])}catch(t){return console.error("Failed to get sorted favorites:",t),[]}}async updateVisitCount(e){try{const{count:t,error:r}=await supabase.from(TABLES.VISIT_HISTORY).select("*",{count:"exact",head:!0}).eq("user_id",DEMO_USER_ID).eq("place_id",e);if(r){console.error("Error counting visits:",r);return}const{error:s}=await supabase.from(TABLES.FAVORITES).update({visit_count:t||0,last_visit:new Date().toISOString()}).eq("user_id",DEMO_USER_ID).eq("place_id",e);s&&console.error("Error updating visit count:",s)}catch(t){console.error("Failed to update visit count:",t)}}transformDatabaseFavoritesToApp(e){return e.map(t=>({id:t.id,user_id:t.user_id,placeId:t.place_id,name:t.name,address:t.address,rating:t.rating,savedAt:new Date(t.saved_at),personal_notes:t.personal_notes||void 0,visitCount:t.visit_count,lastVisit:t.last_visit?new Date(t.last_visit):void 0,tags:t.tags||void 0,created_at:new Date(t.created_at)}))}transformDatabaseVisitsToApp(e){return e.map(t=>({id:t.id,user_id:t.user_id,placeId:t.place_id,shop_name:t.shop_name,visitDate:new Date(t.visit_date),rating:t.rating||void 0,notes:t.notes||void 0,photos:t.photos||void 0,created_at:new Date(t.created_at)}))}async exportUserData(){const[e,t]=await Promise.all([this.getFavorites(),this.getVisitHistory()]);return{favorites:e,visits:t}}async clearAllData(){try{await Promise.all([supabase.from(TABLES.FAVORITES).delete().eq("user_id",DEMO_USER_ID),supabase.from(TABLES.VISIT_HISTORY).delete().eq("user_id",DEMO_USER_ID)])}catch(e){throw console.error("Failed to clear user data:",e),e}}}new I;class T{constructor(){this.localService=new y,this.supabaseService=new I}async migrateToSupabase(){const e={success:!1,favoritesMigrated:0,visitsMigrated:0,errors:[]};try{console.log("Starting data migration from localStorage to Supabase...");const t=await this.localService.exportUserData();if(!t.favorites.length&&!t.visits.length)return console.log("No local data found to migrate"),e.success=!0,e;console.log(`Found ${t.favorites.length} favorites and ${t.visits.length} visits to migrate`);for(const r of t.favorites)try{await this.migrateFavorite(r),e.favoritesMigrated++}catch(s){const a=`Failed to migrate favorite ${r.name}: ${s}`;console.error(a),e.errors.push(a)}for(const r of t.visits)try{await this.migrateVisit(r),e.visitsMigrated++}catch(s){const a=`Failed to migrate visit for ${r.placeId}: ${s}`;console.error(a),e.errors.push(a)}return e.success=e.errors.length===0,console.log("Migration completed:",{favoritesMigrated:e.favoritesMigrated,visitsMigrated:e.visitsMigrated,errors:e.errors.length}),e}catch(t){const r=`Migration failed: ${t}`;return console.error(r),e.errors.push(r),e}}async isMigrationNeeded(){try{const e=await this.localService.exportUserData();if(!e.favorites.length&&!e.visits.length)return!1;const t=await this.supabaseService.exportUserData();return!(t.favorites.length>0||t.visits.length>0)}catch(e){return console.error("Error checking migration status:",e),!1}}async createBackup(){try{return await this.supabaseService.exportUserData()}catch(e){throw console.error("Failed to create backup:",e),e}}async restoreFromBackup(e){try{await this.supabaseService.clearAllData();for(const t of e.favorites)await this.migrateFavorite(t);for(const t of e.visits)await this.migrateVisit(t);console.log("Data restored from backup successfully")}catch(t){throw console.error("Failed to restore from backup:",t),t}}async compareData(){try{const[e,t]=await Promise.all([this.localService.exportUserData(),this.supabaseService.exportUserData()]),r={local:{favorites:e.favorites.length,visits:e.visits.length},supabase:{favorites:t.favorites.length,visits:t.visits.length},differences:[]};return r.local.favorites!==r.supabase.favorites&&r.differences.push(`Favorites count mismatch: local(${r.local.favorites}) vs supabase(${r.supabase.favorites})`),r.local.visits!==r.supabase.visits&&r.differences.push(`Visits count mismatch: local(${r.local.visits}) vs supabase(${r.supabase.visits})`),r}catch(e){throw console.error("Failed to compare data:",e),e}}async migrateFavorite(e){if(await this.supabaseService.isFavorite(e.placeId)){console.log(`Favorite ${e.name} already exists in Supabase, skipping`);return}const r={placeId:e.placeId,name:e.name,address:e.address,rating:e.rating,photos:[],lat:0,lng:0,hours:"",website:"",reviews:[],distance:0,keywords:[],isOpenNow:!1,congestion:"不明",accessInfo:"",menu:[],parkingInfo:""};await this.supabaseService.addToFavorites(r),e.personal_notes&&await this.supabaseService.updateFavoriteNotes(e.placeId,e.personal_notes),e.tags&&e.tags.length>0&&await this.supabaseService.updateFavoriteTags(e.placeId,e.tags)}async migrateVisit(e){await this.supabaseService.addVisit({placeId:e.placeId,shop_name:e.shop_name||"Unknown Shop",visitDate:e.visitDate,rating:e.rating,notes:e.notes,photos:e.photos})}}const b=new T,w={},v=w?.VITE_GEMINI_API_KEY||w?.GEMINI_API_KEY;v||console.warn("API_KEY is not set. Using mock data for AI features.");const A=new D({apiKey:v||""}),S=4320*60*1e3,f={requests:[],maxRequests:15,windowMs:6e4,canMakeRequest(){const i=Date.now();return this.requests=this.requests.filter(e=>i-e<this.windowMs),this.requests.length<this.maxRequests},recordRequest(){this.requests.push(Date.now())},getWaitTime(){if(this.requests.length===0)return 0;const i=Math.min(...this.requests);return Math.max(0,this.windowMs-(Date.now()-i))}};async function x(i,e){const t=await g.get(`summary_${i}`);if(t)return t;if(!v){const r={goodPoints:["濃厚でクリーミーな豚骨スープ","とろけるチャーシューが高評価"],badPoints:["週末は行列が長くなることがある","店内はカウンター席のみで狭め"],tips:["「替え玉」を「バリカタ」で頼むのが人気","卓上の無料トッピング（高菜、紅生姜）を活用すべし"]};return await g.set(`summary_${i}`,r,S),r}if(!f.canMakeRequest()){const r=f.getWaitTime();return console.warn(`Rate limit reached. Please wait ${Math.ceil(r/1e3)} seconds.`),{goodPoints:["API制限により一時的に要約を生成できません"],badPoints:[`${Math.ceil(r/1e3)}秒後に再度お試しください`],tips:["詳細なレビューは下記の個別レビューをご確認ください"]}}try{f.recordRequest();const r=e.length>4e3?e.substring(0,4e3)+"...":e,a=(await A.models.generateContent({model:"gemini-1.5-flash",contents:`以下のラーメン店のレビュー群を分析し、JSON形式で要約してください:

${r}

必ず以下のJSON形式で回答してください:
{"goodPoints":["良い点1","良い点2"],"badPoints":["改善点1","改善点2"],"tips":["ヒント1","ヒント2"]}`,config:{responseMimeType:"application/json",responseSchema:{type:d.OBJECT,properties:{goodPoints:{type:d.ARRAY,description:"この店の特に評価されている良い点や長所を箇条書きでまとめたリスト。最大4つ。",items:{type:d.STRING}},badPoints:{type:d.ARRAY,description:"この店の改善点や注意すべき点、人によっては短所と感じる可能性のある点を箇条書きでまとめたリスト。最大4つ。",items:{type:d.STRING}},tips:{type:d.ARRAY,description:"この店を訪れる際の裏技、おすすめの食べ方、注意点などのヒントを箇条書きでまとめたリスト。最大4つ。",items:{type:d.STRING}}}},systemInstruction:"あなたは経験豊富なフードジャーナリストです。レビューを分析して、必ず有効なJSON形式で回答してください。文字列には改行や特殊文字を含めず、短い箇条書きで要約してください。",maxOutputTokens:512,temperature:.2}})).text?.trim()||"";if(typeof a!="string")throw new Error("Invalid response format: response.text is not a string.");let o;try{const n=a.replace(/[\u0000-\u001F\u007F-\u009F]/g,"").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t");o=JSON.parse(n)}catch(n){console.error("JSON Parse Error:",n),console.error("Problematic JSON text:",a);const _=a.match(/\{.*\}/s);if(_)try{o=JSON.parse(_[0])}catch(E){throw console.error("Second parse attempt failed:",E),new Error(`Failed to parse JSON response: ${n instanceof Error?n.message:"Unknown error"}`)}else throw new Error("No valid JSON found in response")}if(o&&typeof o=="object"){const n={goodPoints:Array.isArray(o.goodPoints)?o.goodPoints:[],badPoints:Array.isArray(o.badPoints)?o.badPoints:[],tips:Array.isArray(o.tips)?o.tips:[]};if(n.goodPoints.length>0||n.badPoints.length>0||n.tips.length>0)return await g.set(`summary_${i}`,n,S),n}return{goodPoints:[],badPoints:[],tips:[]}}catch(r){return console.error("Error generating review summary with Gemini API:",r),{goodPoints:["API制限により一時的に要約を生成できません"],badPoints:["しばらく時間をおいて再度お試しください"],tips:["詳細なレビューは下記の個別レビューをご確認ください"]}}}export{b as d,R as f,x as g};
